{"version":3,"sources":["logSignForm/logInForm.jsx","logSignForm/signUpForm.jsx","logSignForm/confirmMailForm.jsx","logSignForm/resetPasswordForm.jsx","logSignForm/newPasswordForm.jsx","logSignForm/LogSignForm.jsx"],"names":["logInForm","_ref","onChange","onSubmit","confirm","push","useHistory","react_default","a","createElement","Fragment","className","name","placeholder","type","minLength","required","onClick","signUpForm","logIn","confirmMailForm","sendAgain","message","sent","id","resetPasswordForm","value","newPasswordForm","params","useRouteMatch","event","preventDefault","key","email","memo","close","_useState","useState","userName","password","passwordRe","_useState2","Object","slicedToArray","logForm","setLogForm","_useState3","_useState4","confirmMail","setConfirmMail","_useState5","_useState6","setConfirm","_useStateValue","useStateValue","dispatch","_useState7","_useState8","error","setError","useEffect","updatedState","objectSpread","defineProperty","target","signUp","formData","FormData","set","axios","post","concat","process","then","res","data","sendAgainPath","Error","catch","setTimeout","length","withCredentials","user","payload","response","status","alert","resetPassword","sendNewPassword","logSignForm_confirmMailForm","get","react_router","path","render","logSignForm_logInForm","logSignForm_signUpForm","logSignForm_resetPasswordForm","logSignForm_newPasswordForm"],"mappings":"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","file":"static/js/5.19f19083.chunk.js","sourcesContent":["import React from 'react'\r\nimport './userTab.css'\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst logInForm = ({onChange, onSubmit, confirm}) => {\r\n    const {push}=useHistory();\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className={'logInForm'}>\r\n                <h3>{confirm || \"LOG IN\"}</h3>\r\n                <input onChange={onChange} name='email' placeholder='email or username' type='email' minLength=\"2\" required></input>\r\n                <input onChange={onChange} name='password' placeholder='password' type='password' minLength=\"6\" required></input>\r\n                <div onClick={()=>push(\"resetpassword\")} className={\"resetPassword pointer\"}>reset password</div>\r\n                <input className={'submitButton'} type='submit'></input>        \r\n            </form>\r\n            <div className=\"logSignSwitch\" onClick={()=>push(\"signup\")}>NO ACCOUNT? <strong className=\"customLink\">SIGN UP</strong></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default logInForm\r\n","import React from 'react'\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst signUpForm = ({onChange, onSubmit, logIn}) => {\r\n    const {push}=useHistory();\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className={'logInForm'}>\r\n                <h3>SIGN UP</h3>\r\n                <input onChange={onChange} name='userName' placeholder='username' type='text' minLength=\"2\" required></input>\r\n                <input onChange={onChange} name='email' placeholder='email' type='email' minLength=\"2\" required></input>\r\n                <input onChange={onChange} name='password' placeholder='password' type='password' minLength=\"6\" required></input>\r\n                <input onChange={onChange} name='passwordRe' placeholder='repeat password' type='password' minLength=\"6\" required></input>      \r\n                <input className={'submitButton'} type='submit'></input>             \r\n            </form>\r\n            <div className=\"logSignSwitch\" onClick={()=>push(\"login\")}>ALREADY HAVE AN ACCOUNT? <strong className=\"customLink\">LOG IN!</strong></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default signUpForm\r\n","import React from 'react'\r\n\r\nconst confirmMailForm = ({sendAgain, confirm}) => {\r\n    return (\r\n        <div className='logSignContainer confirmMail gradientBackground'>\r\n          <h3>{confirm.message}</h3>\r\n          <div className={\"sendAgain\"}>\r\n            nothing received? \r\n            {confirm.sent?\r\n              <div \r\n                id=\"sendAgainButton\" \r\n                className={'submitButton'}>\r\n                {confirm.sent}\r\n              </div>:\r\n              <div \r\n                onClick={sendAgain} \r\n                id=\"sendAgainButton\" \r\n                className={'submitButton'}>\r\n                SEND AGAIN\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default confirmMailForm\r\n","import React from 'react'\r\n\r\nconst resetPasswordForm = ({onChange, onSubmit, confirm}) => {\r\n    return (\r\n        <form onSubmit={onSubmit} className={'logInForm'}>\r\n            <h3>{confirm || \"SEND RESET LINK TO\"}</h3>\r\n            <input onChange={onChange} name='email' placeholder='email or username' type='email' minLength=\"2\" required></input>\r\n            <input className={'submitButton'} type='submit' value=\"SEND\"></input>        \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default resetPasswordForm\r\n","import React from 'react'\r\nimport {useRouteMatch} from 'react-router-dom'\r\n\r\nconst newPasswordForm = ({onSubmit, onChange}) => {\r\n    const {params}=useRouteMatch()\r\n    const newPassword=(event)=>{\r\n        event.preventDefault();\r\n        onSubmit(params.key, params.email)\r\n    }\r\n    return (\r\n        <form onSubmit={newPassword} className={'logInForm'}>\r\n            <h3>CREATE NEW PASSWORD</h3>\r\n            <input onChange={onChange} name='password' placeholder='password' type='password' minLength=\"6\" required></input>\r\n            <input onChange={onChange} name='passwordRe' placeholder='repeat password' type='password' minLength=\"6\" required></input>      \r\n            <input className={'submitButton'} type='submit'></input>        \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default newPasswordForm\r\n","import React, { useState, memo, useEffect } from 'react'\r\nimport './userTab.css'\r\nimport axios from 'axios'\r\nimport { useStateValue } from '../context/AppContextHook';\r\nimport LogInForm from './logInForm.jsx';\r\nimport SignUpForm from './signUpForm.jsx';\r\nimport ConfirmMailForm from './confirmMailForm.jsx';\r\nimport ResetPasswordForm from './resetPasswordForm.jsx';\r\nimport NewPasswordForm from './newPasswordForm.jsx';\r\nimport { Route, Switch, useHistory } from 'react-router'\r\nconst BASEURL = process.env.REACT_APP_BE_URL;\r\n\r\nconst LogSignForm = ({ close }) => {\r\n  const {push}=useHistory();\r\n  const [logForm, setLogForm] = useState(\r\n    {\r\n      userName: '',\r\n      password: '',\r\n      passwordRe: '',\r\n      email: ''\r\n    }\r\n  )\r\n\r\n\r\n\r\n  const [confirmMail, setConfirmMail] = useState(false);\r\n  const [confirm, setConfirm] = useState({ message: '' });\r\n\r\n  const [, dispatch] = useStateValue();\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch({type: \"blockScroll\"})\r\n    return () => {\r\n      dispatch({type: \"unblockScroll\"})\r\n    };\r\n  }, [])\r\n\r\n\r\n  const onChange = (event) => {\r\n    const updatedState = { ...logForm, [event.target.name]: event.target.value }\r\n    setLogForm(updatedState)\r\n  }\r\n\r\n  const signUp = (event) => {\r\n    event.preventDefault();\r\n    if (logForm.password === logForm.passwordRe) {\r\n      const formData = new FormData();\r\n      formData.set('userName', logForm.userName)\r\n      formData.set('email', logForm.email)\r\n      formData.set('password', logForm.password)\r\n\r\n      axios.post(`${BASEURL}/signup`, formData/* , {withCredentials: true} */).then(res => {\r\n        if(!res.data || !res.data.message || !res.data.sendAgainPath){\r\n          throw new Error(\"server failed to confirm your mail\")\r\n        }\r\n        setConfirmMail(res.data.sendAgainPath)\r\n        setConfirm({message: res.data.message});\r\n      }).catch(error => {\r\n        setError(\"something went wrong\")\r\n        setTimeout(() => setError(\"\"), 4000);\r\n      })\r\n    }\r\n    else {\r\n      setError(\"please check your password\")\r\n      setTimeout(() => setError(\"\"), 4000);\r\n    }\r\n\r\n  }\r\n\r\n  const sendAgain = (event) => {\r\n    event.preventDefault();\r\n    if(!confirmMail || !confirm) return alert(\"looks like the server fucked up! :(\")\r\n\r\n    axios.get(`${BASEURL}/confirmagain/${confirmMail}`).then(res => {\r\n      setConfirm({ ...confirm, sent: \"WAS SENT\" });\r\n\r\n      setTimeout(() => {\r\n        const { message, sendAgainPath } = confirm;\r\n        setConfirm({ message, sendAgainPath })\r\n      }, 3000);\r\n\r\n    }).catch(error => {\r\n      setConfirm({ ...confirm, sent: \"FAILED\" });\r\n      setTimeout(() => {\r\n        const { message, sendAgainPath } = confirm;\r\n        setConfirm({ message, sendAgainPath })\r\n      }, 3000);\r\n    })\r\n  }\r\n\r\n\r\n  const logIn = (event) => {\r\n    event.preventDefault();\r\n    if (logForm.email.length > 2 && logForm.password.length > 5) {\r\n      const formData = new FormData();\r\n      formData.set('email', logForm.email)\r\n      formData.set('password', logForm.password)\r\n      axios.post(`${BASEURL}/login`, formData, { withCredentials: true }).then(res => {\r\n        if (res.data.user) {\r\n          dispatch({\r\n            type: 'logIn',\r\n            payload: res.data.user\r\n          })\r\n          // get rid of /login and return to prev path\r\n          close();\r\n        }\r\n      }).catch((error) => {\r\n        if (error.response && error.response.status === 403) {\r\n          if(!error.res.data || !error.res.data.message || !error.res.data.sendAgainPath){\r\n            return alert(\"server failed to confirm your mail\")\r\n          }\r\n          setConfirmMail(error.res.data.sendAgainPath)\r\n          setConfirm({message: error.res.data.message});\r\n        }\r\n        else {\r\n          setError(\"wrong email or password\")\r\n          setTimeout(() => setError(\"\"), 4000);\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const resetPassword = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set('email', logForm.email)\r\n    axios.post(`${BASEURL}/resetpassword`, formData, { withCredentials: true }).then(res => {\r\n      setConfirm({ message: \"succesfully sent\" })\r\n      setTimeout(() => setConfirm({ message: \"\" }), 10000);\r\n    }).catch((error) => {\r\n      setError(\"email not found\")\r\n      setTimeout(() => setError(\"\"), 4000);\r\n    })\r\n\r\n  }\r\n\r\n  const sendNewPassword = (key, email) => {\r\n    if (key && email && logForm.password && logForm.password === logForm.passwordRe) {\r\n      const formData = new FormData();\r\n      formData.set('password', logForm.password);\r\n      formData.set('key', key);\r\n      formData.set('email', email);\r\n      axios.post(`${BASEURL}/createnewpassword`, formData).then(res => {\r\n        /* go to log in and give them a succes message */\r\n        setConfirm({ message: \"SUCCESFULLY CREATED\" })\r\n        setTimeout(() => setConfirm({ message: \"\" }), 5000);\r\n        push('login')\r\n      }).catch((error) => {\r\n        setError(\"failed\")\r\n        setTimeout(() => setError(\"\"), 4000);\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  if (confirmMail) {\r\n    return (\r\n      <ConfirmMailForm sendAgain={sendAgain} confirm={confirm} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={`logSignContainer gradientBackground ${error ? \"animationShake\" : \"\"}`}>\r\n      {error && <p className={\"errorMessage\"}>{error}</p>}\r\n      <Switch>\r\n        <Route path=\"*/login\" render={() => <LogInForm onSubmit={logIn} onChange={onChange} confirm={confirm.message}/>} />\r\n        <Route path=\"*/signup\" render={() => <SignUpForm onSubmit={signUp} onChange={onChange} />} />\r\n        <Route path=\"*/resetpassword\" render={() => <ResetPasswordForm onSubmit={resetPassword} onChange={onChange} confirm={confirm.message} />} />\r\n        <Route path=\"*/createnewpassword/:key/:email\" render={() => <NewPasswordForm onChange={onChange} onSubmit={sendNewPassword} />} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default memo(LogSignForm)\r\n"],"sourceRoot":""}